<form name="container-form" class='mt-4' method="post" action="/courses/handle-trash-form">

    <div>
        <h3>Course deleted</h3>
        <a href=" /me/stored/courses">My learning</a>
    </div>
    <div class="d-flex align-items-center">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="check-all-selected">
            <label class="form-check-label" for="check-all-selected">
                Choose all
            </label>
        </div>
        <select class="form-control option-selected" name="action" required>
            <option value="">-- Option --</option>
            <option value="delete">Force delete</option>
            <option value="restore">Restore</option>

        </select>
        <button class="btn btn-primary btn-sm btn-check-all-submit" disabled>Execute</button>
    </div>


    <table class='table mt-4'>
        <thead>
            <tr>
                <td></td>
                <th scope='col'>#</th>
                <th scope='col'>Course name</th>
                <th scope='col'>Level</th>
                <th scope='col'>Delete at</th>
                <th scope='col'></th>
            </tr>
        </thead>
        <tbody>
            {{#each courses}}
            <tr>
                <td>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="{{this._id}}" name="courseIds[]">
                    </div>
                </td>
                <th scope='row'>{{sum @index 1}}</th>
                <td>{{this.name}}</td>
                <td>{{this.level}}</td>
                <td>{{this.deletedAt}}</td>
                <td>
                    <a href='' class='btn btn-link btn-restore' data-id="{{this._id}}">Restore</a>
                    {{!-- Định nghĩa trường data-id để lấy dữ liệu --}}
                    <a href='' class='btn btn-link' data-toggle='modal' data-target='#exampleModal'
                        data-id='{{this._id}}'>Destroy</a>
                </td>
            </tr>

            {{else}}
            <tr>
                <td colspan="5" class="text-center">
                    Trash empty.
                    <a href="/me/stored/courses">My learning</a>
                </td>
            </tr>
            {{/each}}

        </tbody>
    </table>
</form>

{{! Confirm delete course }}
<div id='exampleModal' class='modal' tabindex='-1'>
    <div class='modal-dialog'>
        <div class='modal-content'>
            <div class='modal-header'>
                <h5 class='modal-title'>Destroy this course ?</h5>
                <button type='button' class='close' data-dismiss='modal' aria-label='Close'>
                    <span aria-hidden='true'>&times;</span>
                </button>
            </div>
            <div class='modal-body'>
                <p>Do you actually want to destroy this course?</p>
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-secondary' data-dismiss='modal'>Cancle</button>
                <button id='btn-delete-course' type='button' class='btn btn-danger'>Destroy</button>
            </div>
        </div>
    </div>
</div>

{{!-- Restore hidden form --}}
{{!-- Mục đích tạo form trống là để submit form với phương thức post --}}
<form name="delete-course-form" method="POST"></form>
<form name="restore-course-form" method="POST"></form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var courseID;
        var btnDeleteCourse = document.getElementById('btn-delete-course');
        var deleteForm = document.forms['delete-course-form'];
        var restoreBtn = $('.btn-restore');
        var restoreForm = document.forms['restore-course-form'];

        var checkAllSelected = $('#check-all-selected')
        var courseItemCheck = $('input[name="courseIds[]"]')
        var btnCheckAllSubmit = $('.btn-check-all-submit')

        var containerForm = $('.container-form')

        //When dialog confirm clicked
        $('#exampleModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            courseID = button.data('id');
        })

        //When delete course btn clicked
        btnDeleteCourse.onclick = function () {
            //Set attribute action cho form khi clicked
            deleteForm.action = '/courses/' + courseID + '/force?_method=DELETE';
            deleteForm.submit();
        }

        //Restore btn click
        restoreBtn.click(function (e) {
            e.preventDefault()
            var courseID = $(this).data('id');
            restoreForm.action = '/courses/' + courseID + '/restore?_method=PATCH';
            restoreForm.submit();
        })

        //Checkbox all clicked
        checkAllSelected.change(function () {
            var isCheckAll = $(this).prop('checked')
            courseItemCheck.prop('checked', isCheckAll)
            renderCheckAllSubmitBtn()
        })

        //Course item checkbox change
        courseItemCheck.change(function () {
            //return true if all course item checked
            var checkAll = courseItemCheck.length === $('input[name="courseIds[]"]:checked').length
            checkAllSelected.prop('checked', checkAll)
            renderCheckAllSubmitBtn()
        })

        //Re-render submit all button
        function renderCheckAllSubmitBtn() {
            var checkedCount = $('input[name="courseIds[]"]:checked').length
            if (checkedCount) {
                btnCheckAllSubmit.attr('disabled', false);
            }
            else {
                btnCheckAllSubmit.attr('disabled', true);
            }
        }


    })

</script>